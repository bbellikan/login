// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Menubar renders without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Menubar
    applyFilter={[Function]}
    filter="LA"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "bsStyle": "default",
      "children": Array [
        <NavbarHeader>
          <NavbarBrand>
                    <a
                              href="#brand"
                    >
                              React-Bootstrap
                    </a>
          </NavbarBrand>
          <NavbarToggle />
</NavbarHeader>,
        <NavbarCollapse>
          <Nav
                    bsClass="nav"
                    justified={false}
                    pullLeft={false}
                    pullRight={false}
                    stacked={false}
          >
                    <NavItem
                              active={false}
                              disabled={false}
                              eventKey="none"
                              href="#"
                    >
                              Not logged in
                    </NavItem>
          </Nav>
          <NavbarForm
                    componentClass="div"
                    pullLeft={false}
                    pullRight={true}
          >
                    <FormGroup
                              bsClass="form-group"
                    >
                              <FormControl
                                        bsClass="form-control"
                                        componentClass="input"
                                        onChange={[Function]}
                                        placeholder="Type login to login"
                                        type="text"
                                        value=""
                              />
                    </FormGroup>
                     
                    <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              disabled={false}
                              onClick={[Function]}
                              type="submit"
                    >
                              Logout
                    </Button>
          </NavbarForm>
</NavbarCollapse>,
      ],
      "collapseOnSelect": true,
      "inverse": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <NavbarBrand>
              <a
                            href="#brand"
              >
                            React-Bootstrap
              </a>
</NavbarBrand>,
            <NavbarToggle />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <a
                href="#brand"
>
                React-Bootstrap
</a>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "React-Bootstrap",
                "href": "#brand",
              },
              "ref": null,
              "rendered": "React-Bootstrap",
              "type": "a",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Nav
              bsClass="nav"
              justified={false}
              pullLeft={false}
              pullRight={false}
              stacked={false}
>
              <NavItem
                            active={false}
                            disabled={false}
                            eventKey="none"
                            href="#"
              >
                            Not logged in
              </NavItem>
</Nav>,
            <NavbarForm
              componentClass="div"
              pullLeft={false}
              pullRight={true}
>
              <FormGroup
                            bsClass="form-group"
              >
                            <FormControl
                                          bsClass="form-control"
                                          componentClass="input"
                                          onChange={[Function]}
                                          placeholder="Type login to login"
                                          type="text"
                                          value=""
                            />
              </FormGroup>
               
              <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            disabled={false}
                            onClick={[Function]}
                            type="submit"
              >
                            Logout
              </Button>
</NavbarForm>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "nav",
              "children": <NavItem
                active={false}
                disabled={false}
                eventKey="none"
                href="#"
>
                Not logged in
</NavItem>,
              "justified": false,
              "pullLeft": false,
              "pullRight": false,
              "stacked": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "active": false,
                "children": "Not logged in",
                "disabled": false,
                "eventKey": "none",
                "href": "#",
              },
              "ref": null,
              "rendered": "Not logged in",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <FormGroup
                  bsClass="form-group"
>
                  <FormControl
                                    bsClass="form-control"
                                    componentClass="input"
                                    onChange={[Function]}
                                    placeholder="Type login to login"
                                    type="text"
                                    value=""
                  />
</FormGroup>,
                " ",
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  disabled={false}
                  onClick={[Function]}
                  type="submit"
>
                  Logout
</Button>,
              ],
              "componentClass": "div",
              "pullLeft": false,
              "pullRight": true,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "form-group",
                  "children": <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    onChange={[Function]}
                    placeholder="Type login to login"
                    type="text"
                    value=""
/>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "form-control",
                    "componentClass": "input",
                    "onChange": [Function],
                    "placeholder": "Type login to login",
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              " ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "active": false,
                  "block": false,
                  "bsClass": "btn",
                  "bsStyle": "default",
                  "children": "Logout",
                  "disabled": false,
                  "onClick": [Function],
                  "type": "submit",
                },
                "ref": null,
                "rendered": "Logout",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bsStyle": "default",
        "children": Array [
          <NavbarHeader>
            <NavbarBrand>
                        <a
                                    href="#brand"
                        >
                                    React-Bootstrap
                        </a>
            </NavbarBrand>
            <NavbarToggle />
</NavbarHeader>,
          <NavbarCollapse>
            <Nav
                        bsClass="nav"
                        justified={false}
                        pullLeft={false}
                        pullRight={false}
                        stacked={false}
            >
                        <NavItem
                                    active={false}
                                    disabled={false}
                                    eventKey="none"
                                    href="#"
                        >
                                    Not logged in
                        </NavItem>
            </Nav>
            <NavbarForm
                        componentClass="div"
                        pullLeft={false}
                        pullRight={true}
            >
                        <FormGroup
                                    bsClass="form-group"
                        >
                                    <FormControl
                                                bsClass="form-control"
                                                componentClass="input"
                                                onChange={[Function]}
                                                placeholder="Type login to login"
                                                type="text"
                                                value=""
                                    />
                        </FormGroup>
                         
                        <Button
                                    active={false}
                                    block={false}
                                    bsClass="btn"
                                    bsStyle="default"
                                    disabled={false}
                                    onClick={[Function]}
                                    type="submit"
                        >
                                    Logout
                        </Button>
            </NavbarForm>
</NavbarCollapse>,
        ],
        "collapseOnSelect": true,
        "inverse": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <NavbarBrand>
                <a
                                href="#brand"
                >
                                React-Bootstrap
                </a>
</NavbarBrand>,
              <NavbarToggle />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <a
                  href="#brand"
>
                  React-Bootstrap
</a>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "React-Bootstrap",
                  "href": "#brand",
                },
                "ref": null,
                "rendered": "React-Bootstrap",
                "type": "a",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Nav
                bsClass="nav"
                justified={false}
                pullLeft={false}
                pullRight={false}
                stacked={false}
>
                <NavItem
                                active={false}
                                disabled={false}
                                eventKey="none"
                                href="#"
                >
                                Not logged in
                </NavItem>
</Nav>,
              <NavbarForm
                componentClass="div"
                pullLeft={false}
                pullRight={true}
>
                <FormGroup
                                bsClass="form-group"
                >
                                <FormControl
                                                bsClass="form-control"
                                                componentClass="input"
                                                onChange={[Function]}
                                                placeholder="Type login to login"
                                                type="text"
                                                value=""
                                />
                </FormGroup>
                 
                <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsStyle="default"
                                disabled={false}
                                onClick={[Function]}
                                type="submit"
                >
                                Logout
                </Button>
</NavbarForm>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "nav",
                "children": <NavItem
                  active={false}
                  disabled={false}
                  eventKey="none"
                  href="#"
>
                  Not logged in
</NavItem>,
                "justified": false,
                "pullLeft": false,
                "pullRight": false,
                "stacked": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "active": false,
                  "children": "Not logged in",
                  "disabled": false,
                  "eventKey": "none",
                  "href": "#",
                },
                "ref": null,
                "rendered": "Not logged in",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <FormGroup
                    bsClass="form-group"
>
                    <FormControl
                                        bsClass="form-control"
                                        componentClass="input"
                                        onChange={[Function]}
                                        placeholder="Type login to login"
                                        type="text"
                                        value=""
                    />
</FormGroup>,
                  " ",
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="default"
                    disabled={false}
                    onClick={[Function]}
                    type="submit"
>
                    Logout
</Button>,
                ],
                "componentClass": "div",
                "pullLeft": false,
                "pullRight": true,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "form-group",
                    "children": <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      onChange={[Function]}
                      placeholder="Type login to login"
                      type="text"
                      value=""
/>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "form-control",
                      "componentClass": "input",
                      "onChange": [Function],
                      "placeholder": "Type login to login",
                      "type": "text",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                " ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "active": false,
                    "block": false,
                    "bsClass": "btn",
                    "bsStyle": "default",
                    "children": "Logout",
                    "disabled": false,
                    "onClick": [Function],
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Logout",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
