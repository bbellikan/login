// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CellHeader renders without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CellHeader
    deleteCol={[Function]}
    gridCol={
        Object {
            "deleted": false,
            "header": "type",
            "inputType": "text",
            "number": 0,
            "order": 0,
            "sort": "n",
            "type": "STRING",
            "width": 150,
          }
    }
    onRightEdge={[Function]}
    updateClicked={[Function]}
    updateColOrder={[Function]}
    updateSort={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          onClick={[Function]}
>
          <i
                    className="fa fa-times"
          />
</div>,
        " ",
        <div
          onClick={[Function]}
>
           type
</div>,
      ],
      "className": "cell cell-header",
      "draggable": "true",
      "id": "0header",
      "onDragOver": [Function],
      "onDragStart": [Function],
      "onDrop": [Function],
      "onMouseDown": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <i
            className="fa fa-times"
/>,
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "fa fa-times",
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        "type": "div",
      },
      " ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": " type",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": " type",
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            onClick={[Function]}
>
            <i
                        className="fa fa-times"
            />
</div>,
          " ",
          <div
            onClick={[Function]}
>
             type
</div>,
        ],
        "className": "cell cell-header",
        "draggable": "true",
        "id": "0header",
        "onDragOver": [Function],
        "onDragStart": [Function],
        "onDrop": [Function],
        "onMouseDown": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="fa fa-times"
/>,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fa fa-times",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "div",
        },
        " ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": " type",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": " type",
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
